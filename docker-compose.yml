version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://backend:5000
      - NEXT_PUBLIC_APP_NAME=AI Debate Partner
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=file:./db/database.sqlite
      - JWT_SECRET=your_jwt_secret_here_min_32_chars_for_development
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - EMAIL_SERVER_HOST=${EMAIL_SERVER_HOST}
      - EMAIL_SERVER_PORT=${EMAIL_SERVER_PORT}
      - EMAIL_SERVER_USER=${EMAIL_SERVER_USER}
      - EMAIL_SERVER_PASSWORD=${EMAIL_SERVER_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - chroma
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/db:/app/db
    command: npm run dev

  chroma:
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_GRPC_PORT=50051
      - CHROMA_TELEMETRY_ANONYMIZE=true
    volumes:
      - chroma_data:/chroma/chroma
    command: uvicorn chromadb.app:app --host 0.0.0.0 --port 8000

volumes:
  chroma_data:
    driver: local